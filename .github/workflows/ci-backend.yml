name: CI - Backend Build and Push

on:
  push:
    branches:
      - main # Or your default branch, e.g., master
  pull_request:
    branches:
      - main # Or your default branch

jobs:
  lint-and-format-check:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Should match the Node version used in your Dockerfile base
          cache: 'npm'

      - name: Install dependencies
        run: npm ci # Use npm ci for faster, more reliable builds in CI

      - name: Run Prettier Format Check
        run: npm run format:check

  build-and-push-docker-image:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: lint-and-format-check # Ensures this job runs only if linting/formatting passes
    permissions:
      contents: read
      packages: write # Required to push to GitHub Packages (GitHub Container Registry)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # or your GitHub username if preferred
          password: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN is automatically generated and has permissions to push to GHCR in the same repo

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-backend # Example: ghcr.io/your-username/your-repo-name-backend
          tags: |
            type=sha # Git commit SHA (short)
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }} # Tag 'latest' only on pushes to main branch

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Path to your Dockerfile and build context
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }} # Only push on actual pushes to a branch, not on PRs
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=inline
